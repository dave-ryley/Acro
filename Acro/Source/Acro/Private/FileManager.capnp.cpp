#include "Acro.h"

// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: FileManager.capnp

#include "FileManager.capnp.h"

namespace capnp {
	namespace schemas {
		static const ::capnp::_::AlignedData<77> b_a114d742063a4e99 = {
		  {   0,   0,   0,   0,   5,   0,   6,   0,
			153,  78,  58,   6,  66, 215,  20, 161,
			 18,   0,   0,   0,   3,   0,   0,   0,
			255, 154,  42, 170, 113,  15, 246, 163,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 21,   0,   0,   0, 242,   0,   0,   0,
			 33,   0,   0,   0,  39,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 53,   0,   0,   0,  71,   1,   0,   0,
			  5,   1,   0,   0,   7,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 70, 105, 108, 101,  77,  97, 110,  97,
			103, 101, 114,  46,  99,  97, 112, 110,
			112,  58,  70, 105, 108, 101,  77,  97,
			110,  97, 103, 101, 114,   0,   0,   0,
			  8,   0,   0,   0,   1,   0,   1,   0,
			 76, 126, 113,   6, 143, 142, 209, 176,
			  9,   0,   0,   0,  42,   0,   0,   0,
			151, 181,  80, 194,  10, 129, 221, 130,
			  5,   0,   0,   0,  58,   0,   0,   0,
			 70, 105, 108, 101,   0,   0,   0,   0,
			 83, 116,  97, 116, 117, 115,   0,   0,
			 20,   0,   0,   0,   3,   0,   5,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			197, 254, 215, 124,  43,  45, 231, 229,
			143,  63,  57, 208, 107,  65, 115, 248,
			145,   0,   0,   0,  98,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			137,   0,   0,   0,   7,   0,   0,   0,
			  1,   0,   0,   0,   0,   0,   0,   0,
			185, 140, 166, 174,  19, 181, 192, 217,
			 34, 182, 238,  48, 115, 155,  74, 136,
			125,   0,   0,   0,  58,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			113,   0,   0,   0,   7,   0,   0,   0,
			  2,   0,   0,   0,   0,   0,   0,   0,
			 64, 230,  22, 224, 193, 209,  68, 182,
			240,  68, 210,  58,  10, 171,  10, 199,
			101,   0,   0,   0,  74,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 93,   0,   0,   0,   7,   0,   0,   0,
			  3,   0,   0,   0,   0,   0,   0,   0,
			106,  62, 253,  16,  28,  16, 150, 252,
			 69, 148, 212,  43, 213,  86, 144, 165,
			 81,   0,   0,   0,  58,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 69,   0,   0,   0,   7,   0,   0,   0,
			  4,   0,   0,   0,   0,   0,   0,   0,
			 53, 115, 165, 175, 134,  49,  69, 201,
			137, 254,  90, 105, 124, 250, 150, 153,
			 57,   0,   0,   0,  58,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 45,   0,   0,   0,   7,   0,   0,   0,
			104, 101,  97, 108, 116, 104,  67, 104,
			101,  99, 107,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   1,   0,
			105, 110, 115, 101, 114, 116,   0,   0,
			  0,   0,   0,   0,   0,   0,   1,   0,
			114, 101, 116, 114, 105, 101, 118, 101,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   1,   0,
			109, 111, 100, 105, 102, 121,   0,   0,
			  0,   0,   0,   0,   0,   0,   1,   0,
			114, 101, 109, 111, 118, 101,   0,   0,
			  0,   0,   0,   0,   0,   0,   1,   0,
			  0,   0,   0,   0,   1,   0,   1,   0, }
		};
		::capnp::word const* const bp_a114d742063a4e99 = b_a114d742063a4e99.words;
#if !CAPNP_LITE
		static const ::capnp::_::RawSchema* const d_a114d742063a4e99[] = {
		  &s_884a9b7330eeb622,
		  &s_9996fa7c695afe89,
		  &s_a59056d52bd49445,
		  &s_b644d1c1e016e640,
		  &s_c70aab0a3ad244f0,
		  &s_c9453186afa57335,
		  &s_d9c0b513aea68cb9,
		  &s_e5e72d2b7cd7fec5,
		  &s_f873416bd0393f8f,
		  &s_fc96101c10fd3e6a,
		};
		static const uint16_t m_a114d742063a4e99[] = { 0, 1, 3, 4, 2 };
		const ::capnp::_::RawSchema s_a114d742063a4e99 = {
		  0xa114d742063a4e99, b_a114d742063a4e99.words, 77, d_a114d742063a4e99, m_a114d742063a4e99,
		  10, 5, nullptr, nullptr, nullptr, { &s_a114d742063a4e99, nullptr, nullptr, 0, 0, nullptr }
		};
#endif  // !CAPNP_LITE
		static const ::capnp::_::AlignedData<64> b_b0d18e8f06717e4c = {
		  {   0,   0,   0,   0,   5,   0,   6,   0,
			 76, 126, 113,   6, 143, 142, 209, 176,
			 30,   0,   0,   0,   1,   0,   0,   0,
			153,  78,  58,   6,  66, 215,  20, 161,
			  3,   0,   7,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 21,   0,   0,   0,  26,   1,   0,   0,
			 37,   0,   0,   0,   7,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 33,   0,   0,   0, 175,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 70, 105, 108, 101,  77,  97, 110,  97,
			103, 101, 114,  46,  99,  97, 112, 110,
			112,  58,  70, 105, 108, 101,  77,  97,
			110,  97, 103, 101, 114,  46,  70, 105,
			108, 101,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   1,   0,   1,   0,
			 12,   0,   0,   0,   3,   0,   4,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   1,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 69,   0,   0,   0,  42,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 64,   0,   0,   0,   3,   0,   1,   0,
			 76,   0,   0,   0,   2,   0,   1,   0,
			  1,   0,   0,   0,   1,   0,   0,   0,
			  0,   0,   1,   0,   1,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 73,   0,   0,   0,  42,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 68,   0,   0,   0,   3,   0,   1,   0,
			 80,   0,   0,   0,   2,   0,   1,   0,
			  2,   0,   0,   0,   2,   0,   0,   0,
			  0,   0,   1,   0,   2,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 77,   0,   0,   0,  66,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 72,   0,   0,   0,   3,   0,   1,   0,
			 84,   0,   0,   0,   2,   0,   1,   0,
			117, 117, 105, 100,   0,   0,   0,   0,
			 12,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 12,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			110,  97, 109, 101,   0,   0,   0,   0,
			 12,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 12,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 99, 111, 110, 116, 101, 110, 116,   0,
			 13,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 13,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0, }
		};
		::capnp::word const* const bp_b0d18e8f06717e4c = b_b0d18e8f06717e4c.words;
#if !CAPNP_LITE
		static const uint16_t m_b0d18e8f06717e4c[] = { 2, 1, 0 };
		static const uint16_t i_b0d18e8f06717e4c[] = { 0, 1, 2 };
		const ::capnp::_::RawSchema s_b0d18e8f06717e4c = {
		  0xb0d18e8f06717e4c, b_b0d18e8f06717e4c.words, 64, nullptr, m_b0d18e8f06717e4c,
		  0, 3, i_b0d18e8f06717e4c, nullptr, nullptr, { &s_b0d18e8f06717e4c, nullptr, nullptr, 0, 0, nullptr }
		};
#endif  // !CAPNP_LITE
		static const ::capnp::_::AlignedData<39> b_82dd810ac250b597 = {
		  {   0,   0,   0,   0,   5,   0,   6,   0,
			151, 181,  80, 194,  10, 129, 221, 130,
			 30,   0,   0,   0,   2,   0,   0,   0,
			153,  78,  58,   6,  66, 215,  20, 161,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 21,   0,   0,   0,  42,   1,   0,   0,
			 37,   0,   0,   0,   7,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 33,   0,   0,   0, 103,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 70, 105, 108, 101,  77,  97, 110,  97,
			103, 101, 114,  46,  99,  97, 112, 110,
			112,  58,  70, 105, 108, 101,  77,  97,
			110,  97, 103, 101, 114,  46,  83, 116,
			 97, 116, 117, 115,   0,   0,   0,   0,
			  0,   0,   0,   0,   1,   0,   1,   0,
			 16,   0,   0,   0,   1,   0,   2,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 41,   0,   0,   0, 106,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  1,   0,   0,   0,   0,   0,   0,   0,
			 37,   0,   0,   0,  26,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  2,   0,   0,   0,   0,   0,   0,   0,
			 29,   0,   0,   0, 146,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  3,   0,   0,   0,   0,   0,   0,   0,
			 29,   0,   0,   0, 106,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			117, 110, 107, 110, 111, 119, 110,  69,
			114, 114, 111, 114,   0,   0,   0,   0,
			111, 107,   0,   0,   0,   0,   0,   0,
			102, 105, 108, 101,  65, 108, 114, 101,
			 97, 100, 121,  69, 120, 105, 115, 116,
			115,   0,   0,   0,   0,   0,   0,   0,
			102, 105, 108, 101,  78, 111, 116,  70,
			111, 117, 110, 100,   0,   0,   0,   0, }
		};
		::capnp::word const* const bp_82dd810ac250b597 = b_82dd810ac250b597.words;
#if !CAPNP_LITE
		static const uint16_t m_82dd810ac250b597[] = { 2, 3, 1, 0 };
		const ::capnp::_::RawSchema s_82dd810ac250b597 = {
		  0x82dd810ac250b597, b_82dd810ac250b597.words, 39, nullptr, m_82dd810ac250b597,
		  0, 4, nullptr, nullptr, nullptr, { &s_82dd810ac250b597, nullptr, nullptr, 0, 0, nullptr }
		};
#endif  // !CAPNP_LITE
		CAPNP_DEFINE_ENUM(Status_82dd810ac250b597, 82dd810ac250b597);
		static const ::capnp::_::AlignedData<19> b_e5e72d2b7cd7fec5 = {
		  {   0,   0,   0,   0,   5,   0,   6,   0,
			197, 254, 215, 124,  43,  45, 231, 229,
			 30,   0,   0,   0,   1,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   7,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 21,   0,   0,   0, 138,   1,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 70, 105, 108, 101,  77,  97, 110,  97,
			103, 101, 114,  46,  99,  97, 112, 110,
			112,  58,  70, 105, 108, 101,  77,  97,
			110,  97, 103, 101, 114,  46, 104, 101,
			 97, 108, 116, 104,  67, 104, 101,  99,
			107,  36,  80,  97, 114,  97, 109, 115,
			  0,   0,   0,   0,   0,   0,   0,   0, }
		};
		::capnp::word const* const bp_e5e72d2b7cd7fec5 = b_e5e72d2b7cd7fec5.words;
#if !CAPNP_LITE
		const ::capnp::_::RawSchema s_e5e72d2b7cd7fec5 = {
		  0xe5e72d2b7cd7fec5, b_e5e72d2b7cd7fec5.words, 19, nullptr, nullptr,
		  0, 0, nullptr, nullptr, nullptr, { &s_e5e72d2b7cd7fec5, nullptr, nullptr, 0, 0, nullptr }
		};
#endif  // !CAPNP_LITE
		static const ::capnp::_::AlignedData<35> b_f873416bd0393f8f = {
		  {   0,   0,   0,   0,   5,   0,   6,   0,
			143,  63,  57, 208, 107,  65, 115, 248,
			 30,   0,   0,   0,   1,   0,   1,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   7,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 21,   0,   0,   0, 146,   1,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 37,   0,   0,   0,  63,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 70, 105, 108, 101,  77,  97, 110,  97,
			103, 101, 114,  46,  99,  97, 112, 110,
			112,  58,  70, 105, 108, 101,  77,  97,
			110,  97, 103, 101, 114,  46, 104, 101,
			 97, 108, 116, 104,  67, 104, 101,  99,
			107,  36,  82, 101, 115, 117, 108, 116,
			115,   0,   0,   0,   0,   0,   0,   0,
			  4,   0,   0,   0,   3,   0,   4,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   1,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 13,   0,   0,   0,  58,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  8,   0,   0,   0,   3,   0,   1,   0,
			 20,   0,   0,   0,   2,   0,   1,   0,
			114, 101, 115, 117, 108, 116,   0,   0,
			  1,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  1,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0, }
		};
		::capnp::word const* const bp_f873416bd0393f8f = b_f873416bd0393f8f.words;
#if !CAPNP_LITE
		static const uint16_t m_f873416bd0393f8f[] = { 0 };
		static const uint16_t i_f873416bd0393f8f[] = { 0 };
		const ::capnp::_::RawSchema s_f873416bd0393f8f = {
		  0xf873416bd0393f8f, b_f873416bd0393f8f.words, 35, nullptr, m_f873416bd0393f8f,
		  0, 1, i_f873416bd0393f8f, nullptr, nullptr, { &s_f873416bd0393f8f, nullptr, nullptr, 0, 0, nullptr }
		};
#endif  // !CAPNP_LITE
		static const ::capnp::_::AlignedData<34> b_d9c0b513aea68cb9 = {
		  {   0,   0,   0,   0,   5,   0,   6,   0,
			185, 140, 166, 174,  19, 181, 192, 217,
			 30,   0,   0,   0,   1,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  1,   0,   7,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 21,   0,   0,   0,  98,   1,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 33,   0,   0,   0,  63,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 70, 105, 108, 101,  77,  97, 110,  97,
			103, 101, 114,  46,  99,  97, 112, 110,
			112,  58,  70, 105, 108, 101,  77,  97,
			110,  97, 103, 101, 114,  46, 105, 110,
			115, 101, 114, 116,  36,  80,  97, 114,
			 97, 109, 115,   0,   0,   0,   0,   0,
			  4,   0,   0,   0,   3,   0,   4,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   1,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 13,   0,   0,   0,  50,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  8,   0,   0,   0,   3,   0,   1,   0,
			 20,   0,   0,   0,   2,   0,   1,   0,
			105, 110, 112, 117, 116,   0,   0,   0,
			 16,   0,   0,   0,   0,   0,   0,   0,
			 76, 126, 113,   6, 143, 142, 209, 176,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 16,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0, }
		};
		::capnp::word const* const bp_d9c0b513aea68cb9 = b_d9c0b513aea68cb9.words;
#if !CAPNP_LITE
		static const ::capnp::_::RawSchema* const d_d9c0b513aea68cb9[] = {
		  &s_b0d18e8f06717e4c,
		};
		static const uint16_t m_d9c0b513aea68cb9[] = { 0 };
		static const uint16_t i_d9c0b513aea68cb9[] = { 0 };
		const ::capnp::_::RawSchema s_d9c0b513aea68cb9 = {
		  0xd9c0b513aea68cb9, b_d9c0b513aea68cb9.words, 34, d_d9c0b513aea68cb9, m_d9c0b513aea68cb9,
		  1, 1, i_d9c0b513aea68cb9, nullptr, nullptr, { &s_d9c0b513aea68cb9, nullptr, nullptr, 0, 0, nullptr }
		};
#endif  // !CAPNP_LITE
		static const ::capnp::_::AlignedData<34> b_884a9b7330eeb622 = {
		  {   0,   0,   0,   0,   5,   0,   6,   0,
			 34, 182, 238,  48, 115, 155,  74, 136,
			 30,   0,   0,   0,   1,   0,   1,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   7,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 21,   0,   0,   0, 106,   1,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 33,   0,   0,   0,  63,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 70, 105, 108, 101,  77,  97, 110,  97,
			103, 101, 114,  46,  99,  97, 112, 110,
			112,  58,  70, 105, 108, 101,  77,  97,
			110,  97, 103, 101, 114,  46, 105, 110,
			115, 101, 114, 116,  36,  82, 101, 115,
			117, 108, 116, 115,   0,   0,   0,   0,
			  4,   0,   0,   0,   3,   0,   4,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   1,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 13,   0,   0,   0,  58,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  8,   0,   0,   0,   3,   0,   1,   0,
			 20,   0,   0,   0,   2,   0,   1,   0,
			115, 116,  97, 116, 117, 115,   0,   0,
			 15,   0,   0,   0,   0,   0,   0,   0,
			151, 181,  80, 194,  10, 129, 221, 130,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 15,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0, }
		};
		::capnp::word const* const bp_884a9b7330eeb622 = b_884a9b7330eeb622.words;
#if !CAPNP_LITE
		static const ::capnp::_::RawSchema* const d_884a9b7330eeb622[] = {
		  &s_82dd810ac250b597,
		};
		static const uint16_t m_884a9b7330eeb622[] = { 0 };
		static const uint16_t i_884a9b7330eeb622[] = { 0 };
		const ::capnp::_::RawSchema s_884a9b7330eeb622 = {
		  0x884a9b7330eeb622, b_884a9b7330eeb622.words, 34, d_884a9b7330eeb622, m_884a9b7330eeb622,
		  1, 1, i_884a9b7330eeb622, nullptr, nullptr, { &s_884a9b7330eeb622, nullptr, nullptr, 0, 0, nullptr }
		};
#endif  // !CAPNP_LITE
		static const ::capnp::_::AlignedData<34> b_b644d1c1e016e640 = {
		  {   0,   0,   0,   0,   5,   0,   6,   0,
			 64, 230,  22, 224, 193, 209,  68, 182,
			 30,   0,   0,   0,   1,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  1,   0,   7,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 21,   0,   0,   0, 114,   1,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 33,   0,   0,   0,  63,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 70, 105, 108, 101,  77,  97, 110,  97,
			103, 101, 114,  46,  99,  97, 112, 110,
			112,  58,  70, 105, 108, 101,  77,  97,
			110,  97, 103, 101, 114,  46, 114, 101,
			116, 114, 105, 101, 118, 101,  36,  80,
			 97, 114,  97, 109, 115,   0,   0,   0,
			  4,   0,   0,   0,   3,   0,   4,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   1,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 13,   0,   0,   0,  42,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  8,   0,   0,   0,   3,   0,   1,   0,
			 20,   0,   0,   0,   2,   0,   1,   0,
			117, 117, 105, 100,   0,   0,   0,   0,
			 12,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 12,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0, }
		};
		::capnp::word const* const bp_b644d1c1e016e640 = b_b644d1c1e016e640.words;
#if !CAPNP_LITE
		static const uint16_t m_b644d1c1e016e640[] = { 0 };
		static const uint16_t i_b644d1c1e016e640[] = { 0 };
		const ::capnp::_::RawSchema s_b644d1c1e016e640 = {
		  0xb644d1c1e016e640, b_b644d1c1e016e640.words, 34, nullptr, m_b644d1c1e016e640,
		  0, 1, i_b644d1c1e016e640, nullptr, nullptr, { &s_b644d1c1e016e640, nullptr, nullptr, 0, 0, nullptr }
		};
#endif  // !CAPNP_LITE
		static const ::capnp::_::AlignedData<49> b_c70aab0a3ad244f0 = {
		  {   0,   0,   0,   0,   5,   0,   6,   0,
			240,  68, 210,  58,  10, 171,  10, 199,
			 30,   0,   0,   0,   1,   0,   1,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  1,   0,   7,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 21,   0,   0,   0, 122,   1,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 33,   0,   0,   0, 119,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 70, 105, 108, 101,  77,  97, 110,  97,
			103, 101, 114,  46,  99,  97, 112, 110,
			112,  58,  70, 105, 108, 101,  77,  97,
			110,  97, 103, 101, 114,  46, 114, 101,
			116, 114, 105, 101, 118, 101,  36,  82,
			101, 115, 117, 108, 116, 115,   0,   0,
			  8,   0,   0,   0,   3,   0,   4,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   1,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 41,   0,   0,   0,  58,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 36,   0,   0,   0,   3,   0,   1,   0,
			 48,   0,   0,   0,   2,   0,   1,   0,
			  1,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   1,   0,   1,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 45,   0,   0,   0,  42,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 40,   0,   0,   0,   3,   0,   1,   0,
			 52,   0,   0,   0,   2,   0,   1,   0,
			115, 116,  97, 116, 117, 115,   0,   0,
			 15,   0,   0,   0,   0,   0,   0,   0,
			151, 181,  80, 194,  10, 129, 221, 130,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 15,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			102, 105, 108, 101,   0,   0,   0,   0,
			 16,   0,   0,   0,   0,   0,   0,   0,
			 76, 126, 113,   6, 143, 142, 209, 176,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 16,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0, }
		};
		::capnp::word const* const bp_c70aab0a3ad244f0 = b_c70aab0a3ad244f0.words;
#if !CAPNP_LITE
		static const ::capnp::_::RawSchema* const d_c70aab0a3ad244f0[] = {
		  &s_82dd810ac250b597,
		  &s_b0d18e8f06717e4c,
		};
		static const uint16_t m_c70aab0a3ad244f0[] = { 1, 0 };
		static const uint16_t i_c70aab0a3ad244f0[] = { 0, 1 };
		const ::capnp::_::RawSchema s_c70aab0a3ad244f0 = {
		  0xc70aab0a3ad244f0, b_c70aab0a3ad244f0.words, 49, d_c70aab0a3ad244f0, m_c70aab0a3ad244f0,
		  2, 2, i_c70aab0a3ad244f0, nullptr, nullptr, { &s_c70aab0a3ad244f0, nullptr, nullptr, 0, 0, nullptr }
		};
#endif  // !CAPNP_LITE
		static const ::capnp::_::AlignedData<49> b_fc96101c10fd3e6a = {
		  {   0,   0,   0,   0,   5,   0,   6,   0,
			106,  62, 253,  16,  28,  16, 150, 252,
			 30,   0,   0,   0,   1,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  2,   0,   7,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 21,   0,   0,   0,  98,   1,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 33,   0,   0,   0, 119,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 70, 105, 108, 101,  77,  97, 110,  97,
			103, 101, 114,  46,  99,  97, 112, 110,
			112,  58,  70, 105, 108, 101,  77,  97,
			110,  97, 103, 101, 114,  46, 109, 111,
			100, 105, 102, 121,  36,  80,  97, 114,
			 97, 109, 115,   0,   0,   0,   0,   0,
			  8,   0,   0,   0,   3,   0,   4,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   1,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 41,   0,   0,   0,  42,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 36,   0,   0,   0,   3,   0,   1,   0,
			 48,   0,   0,   0,   2,   0,   1,   0,
			  1,   0,   0,   0,   1,   0,   0,   0,
			  0,   0,   1,   0,   1,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 45,   0,   0,   0,  42,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 40,   0,   0,   0,   3,   0,   1,   0,
			 52,   0,   0,   0,   2,   0,   1,   0,
			117, 117, 105, 100,   0,   0,   0,   0,
			 12,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 12,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			100,  97, 116,  97,   0,   0,   0,   0,
			 13,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 13,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0, }
		};
		::capnp::word const* const bp_fc96101c10fd3e6a = b_fc96101c10fd3e6a.words;
#if !CAPNP_LITE
		static const uint16_t m_fc96101c10fd3e6a[] = { 1, 0 };
		static const uint16_t i_fc96101c10fd3e6a[] = { 0, 1 };
		const ::capnp::_::RawSchema s_fc96101c10fd3e6a = {
		  0xfc96101c10fd3e6a, b_fc96101c10fd3e6a.words, 49, nullptr, m_fc96101c10fd3e6a,
		  0, 2, i_fc96101c10fd3e6a, nullptr, nullptr, { &s_fc96101c10fd3e6a, nullptr, nullptr, 0, 0, nullptr }
		};
#endif  // !CAPNP_LITE
		static const ::capnp::_::AlignedData<34> b_a59056d52bd49445 = {
		  {   0,   0,   0,   0,   5,   0,   6,   0,
			 69, 148, 212,  43, 213,  86, 144, 165,
			 30,   0,   0,   0,   1,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  1,   0,   7,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 21,   0,   0,   0, 106,   1,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 33,   0,   0,   0,  63,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 70, 105, 108, 101,  77,  97, 110,  97,
			103, 101, 114,  46,  99,  97, 112, 110,
			112,  58,  70, 105, 108, 101,  77,  97,
			110,  97, 103, 101, 114,  46, 109, 111,
			100, 105, 102, 121,  36,  82, 101, 115,
			117, 108, 116, 115,   0,   0,   0,   0,
			  4,   0,   0,   0,   3,   0,   4,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   1,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 13,   0,   0,   0,  42,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  8,   0,   0,   0,   3,   0,   1,   0,
			 20,   0,   0,   0,   2,   0,   1,   0,
			102, 105, 108, 101,   0,   0,   0,   0,
			 16,   0,   0,   0,   0,   0,   0,   0,
			 76, 126, 113,   6, 143, 142, 209, 176,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 16,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0, }
		};
		::capnp::word const* const bp_a59056d52bd49445 = b_a59056d52bd49445.words;
#if !CAPNP_LITE
		static const ::capnp::_::RawSchema* const d_a59056d52bd49445[] = {
		  &s_b0d18e8f06717e4c,
		};
		static const uint16_t m_a59056d52bd49445[] = { 0 };
		static const uint16_t i_a59056d52bd49445[] = { 0 };
		const ::capnp::_::RawSchema s_a59056d52bd49445 = {
		  0xa59056d52bd49445, b_a59056d52bd49445.words, 34, d_a59056d52bd49445, m_a59056d52bd49445,
		  1, 1, i_a59056d52bd49445, nullptr, nullptr, { &s_a59056d52bd49445, nullptr, nullptr, 0, 0, nullptr }
		};
#endif  // !CAPNP_LITE
		static const ::capnp::_::AlignedData<34> b_c9453186afa57335 = {
		  {   0,   0,   0,   0,   5,   0,   6,   0,
			 53, 115, 165, 175, 134,  49,  69, 201,
			 30,   0,   0,   0,   1,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  1,   0,   7,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 21,   0,   0,   0,  98,   1,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 33,   0,   0,   0,  63,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 70, 105, 108, 101,  77,  97, 110,  97,
			103, 101, 114,  46,  99,  97, 112, 110,
			112,  58,  70, 105, 108, 101,  77,  97,
			110,  97, 103, 101, 114,  46, 114, 101,
			109, 111, 118, 101,  36,  80,  97, 114,
			 97, 109, 115,   0,   0,   0,   0,   0,
			  4,   0,   0,   0,   3,   0,   4,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   1,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 13,   0,   0,   0,  42,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  8,   0,   0,   0,   3,   0,   1,   0,
			 20,   0,   0,   0,   2,   0,   1,   0,
			117, 117, 105, 100,   0,   0,   0,   0,
			 12,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 12,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0, }
		};
		::capnp::word const* const bp_c9453186afa57335 = b_c9453186afa57335.words;
#if !CAPNP_LITE
		static const uint16_t m_c9453186afa57335[] = { 0 };
		static const uint16_t i_c9453186afa57335[] = { 0 };
		const ::capnp::_::RawSchema s_c9453186afa57335 = {
		  0xc9453186afa57335, b_c9453186afa57335.words, 34, nullptr, m_c9453186afa57335,
		  0, 1, i_c9453186afa57335, nullptr, nullptr, { &s_c9453186afa57335, nullptr, nullptr, 0, 0, nullptr }
		};
#endif  // !CAPNP_LITE
		static const ::capnp::_::AlignedData<34> b_9996fa7c695afe89 = {
		  {   0,   0,   0,   0,   5,   0,   6,   0,
			137, 254,  90, 105, 124, 250, 150, 153,
			 30,   0,   0,   0,   1,   0,   1,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   7,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 21,   0,   0,   0, 106,   1,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 33,   0,   0,   0,  63,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 70, 105, 108, 101,  77,  97, 110,  97,
			103, 101, 114,  46,  99,  97, 112, 110,
			112,  58,  70, 105, 108, 101,  77,  97,
			110,  97, 103, 101, 114,  46, 114, 101,
			109, 111, 118, 101,  36,  82, 101, 115,
			117, 108, 116, 115,   0,   0,   0,   0,
			  4,   0,   0,   0,   3,   0,   4,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   1,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 13,   0,   0,   0,  58,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  8,   0,   0,   0,   3,   0,   1,   0,
			 20,   0,   0,   0,   2,   0,   1,   0,
			115, 116,  97, 116, 117, 115,   0,   0,
			 15,   0,   0,   0,   0,   0,   0,   0,
			151, 181,  80, 194,  10, 129, 221, 130,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			 15,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0,
			  0,   0,   0,   0,   0,   0,   0,   0, }
		};
		::capnp::word const* const bp_9996fa7c695afe89 = b_9996fa7c695afe89.words;
#if !CAPNP_LITE
		static const ::capnp::_::RawSchema* const d_9996fa7c695afe89[] = {
		  &s_82dd810ac250b597,
		};
		static const uint16_t m_9996fa7c695afe89[] = { 0 };
		static const uint16_t i_9996fa7c695afe89[] = { 0 };
		const ::capnp::_::RawSchema s_9996fa7c695afe89 = {
		  0x9996fa7c695afe89, b_9996fa7c695afe89.words, 34, d_9996fa7c695afe89, m_9996fa7c695afe89,
		  1, 1, i_9996fa7c695afe89, nullptr, nullptr, { &s_9996fa7c695afe89, nullptr, nullptr, 0, 0, nullptr }
		};
#endif  // !CAPNP_LITE
	}  // namespace schemas
}  // namespace capnp

// =======================================================================================


#if !CAPNP_LITE
::capnp::Request< ::FileManager::HealthCheckParams, ::FileManager::HealthCheckResults>
FileManager::Client::healthCheckRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
	return newCall< ::FileManager::HealthCheckParams, ::FileManager::HealthCheckResults>(
		0xa114d742063a4e99ull, 0, sizeHint);
}
::kj::Promise<void> FileManager::Server::healthCheck(HealthCheckContext) {
	return ::capnp::Capability::Server::internalUnimplemented(
		"FileManager.capnp:FileManager", "healthCheck",
		0xa114d742063a4e99ull, 0);
}
::capnp::Request< ::FileManager::InsertParams, ::FileManager::InsertResults>
FileManager::Client::insertRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
	return newCall< ::FileManager::InsertParams, ::FileManager::InsertResults>(
		0xa114d742063a4e99ull, 1, sizeHint);
}
::kj::Promise<void> FileManager::Server::insert(InsertContext) {
	return ::capnp::Capability::Server::internalUnimplemented(
		"FileManager.capnp:FileManager", "insert",
		0xa114d742063a4e99ull, 1);
}
::capnp::Request< ::FileManager::RetrieveParams, ::FileManager::RetrieveResults>
FileManager::Client::retrieveRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
	return newCall< ::FileManager::RetrieveParams, ::FileManager::RetrieveResults>(
		0xa114d742063a4e99ull, 2, sizeHint);
}
::kj::Promise<void> FileManager::Server::retrieve(RetrieveContext) {
	return ::capnp::Capability::Server::internalUnimplemented(
		"FileManager.capnp:FileManager", "retrieve",
		0xa114d742063a4e99ull, 2);
}
::capnp::Request< ::FileManager::ModifyParams, ::FileManager::ModifyResults>
FileManager::Client::modifyRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
	return newCall< ::FileManager::ModifyParams, ::FileManager::ModifyResults>(
		0xa114d742063a4e99ull, 3, sizeHint);
}
::kj::Promise<void> FileManager::Server::modify(ModifyContext) {
	return ::capnp::Capability::Server::internalUnimplemented(
		"FileManager.capnp:FileManager", "modify",
		0xa114d742063a4e99ull, 3);
}
::capnp::Request< ::FileManager::RemoveParams, ::FileManager::RemoveResults>
FileManager::Client::removeRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
	return newCall< ::FileManager::RemoveParams, ::FileManager::RemoveResults>(
		0xa114d742063a4e99ull, 4, sizeHint);
}
::kj::Promise<void> FileManager::Server::remove(RemoveContext) {
	return ::capnp::Capability::Server::internalUnimplemented(
		"FileManager.capnp:FileManager", "remove",
		0xa114d742063a4e99ull, 4);
}
::kj::Promise<void> FileManager::Server::dispatchCall(
	uint64_t interfaceId, uint16_t methodId,
	::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
	switch (interfaceId) {
	case 0xa114d742063a4e99ull:
		return dispatchCallInternal(methodId, context);
	default:
		return internalUnimplemented("FileManager.capnp:FileManager", interfaceId);
	}
}
::kj::Promise<void> FileManager::Server::dispatchCallInternal(
	uint16_t methodId,
	::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
	switch (methodId) {
	case 0:
		return healthCheck(::capnp::Capability::Server::internalGetTypedContext<
			::FileManager::HealthCheckParams, ::FileManager::HealthCheckResults>(context));
	case 1:
		return insert(::capnp::Capability::Server::internalGetTypedContext<
			::FileManager::InsertParams, ::FileManager::InsertResults>(context));
	case 2:
		return retrieve(::capnp::Capability::Server::internalGetTypedContext<
			::FileManager::RetrieveParams, ::FileManager::RetrieveResults>(context));
	case 3:
		return modify(::capnp::Capability::Server::internalGetTypedContext<
			::FileManager::ModifyParams, ::FileManager::ModifyResults>(context));
	case 4:
		return remove(::capnp::Capability::Server::internalGetTypedContext<
			::FileManager::RemoveParams, ::FileManager::RemoveResults>(context));
	default:
		(void)context;
		return ::capnp::Capability::Server::internalUnimplemented(
			"FileManager.capnp:FileManager",
			0xa114d742063a4e99ull, methodId);
	}
}
#endif  // !CAPNP_LITE

// FileManager
#if !CAPNP_LITE
constexpr ::capnp::Kind FileManager::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FileManager::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FileManager::File
constexpr uint16_t FileManager::File::_capnpPrivate::dataWordSize;
constexpr uint16_t FileManager::File::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FileManager::File::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FileManager::File::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FileManager::HealthCheckParams
constexpr uint16_t FileManager::HealthCheckParams::_capnpPrivate::dataWordSize;
constexpr uint16_t FileManager::HealthCheckParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FileManager::HealthCheckParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FileManager::HealthCheckParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FileManager::HealthCheckResults
constexpr uint16_t FileManager::HealthCheckResults::_capnpPrivate::dataWordSize;
constexpr uint16_t FileManager::HealthCheckResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FileManager::HealthCheckResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FileManager::HealthCheckResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FileManager::InsertParams
constexpr uint16_t FileManager::InsertParams::_capnpPrivate::dataWordSize;
constexpr uint16_t FileManager::InsertParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FileManager::InsertParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FileManager::InsertParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FileManager::InsertResults
constexpr uint16_t FileManager::InsertResults::_capnpPrivate::dataWordSize;
constexpr uint16_t FileManager::InsertResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FileManager::InsertResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FileManager::InsertResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FileManager::RetrieveParams
constexpr uint16_t FileManager::RetrieveParams::_capnpPrivate::dataWordSize;
constexpr uint16_t FileManager::RetrieveParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FileManager::RetrieveParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FileManager::RetrieveParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FileManager::RetrieveResults
constexpr uint16_t FileManager::RetrieveResults::_capnpPrivate::dataWordSize;
constexpr uint16_t FileManager::RetrieveResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FileManager::RetrieveResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FileManager::RetrieveResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FileManager::ModifyParams
constexpr uint16_t FileManager::ModifyParams::_capnpPrivate::dataWordSize;
constexpr uint16_t FileManager::ModifyParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FileManager::ModifyParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FileManager::ModifyParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FileManager::ModifyResults
constexpr uint16_t FileManager::ModifyResults::_capnpPrivate::dataWordSize;
constexpr uint16_t FileManager::ModifyResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FileManager::ModifyResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FileManager::ModifyResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FileManager::RemoveParams
constexpr uint16_t FileManager::RemoveParams::_capnpPrivate::dataWordSize;
constexpr uint16_t FileManager::RemoveParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FileManager::RemoveParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FileManager::RemoveParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FileManager::RemoveResults
constexpr uint16_t FileManager::RemoveResults::_capnpPrivate::dataWordSize;
constexpr uint16_t FileManager::RemoveResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FileManager::RemoveResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FileManager::RemoveResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE
